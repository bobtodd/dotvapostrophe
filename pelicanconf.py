#!/usr/bin/env python
# -*- coding: utf-8 -*- #
from __future__ import unicode_literals
import os # for IPython Notebook code

AUTHOR = 'BobTodd'
SITENAME = 'Dot v. Apostrophe'
SITEURL = 'http://localhost:8000'

PATH = 'content'

# Times and dates
TIMEZONE = 'America/Chicago'
DEFAULT_DATE_FORMAT = '%b %d, %Y'

DEFAULT_LANG = 'en'


# Set the article URL
ARTICLE_URL = 'blog/{date:%Y}/{date:%m}/{date:%d}/{slug}/'
ARTICLE_SAVE_AS = 'blog/{date:%Y}/{date:%m}/{date:%d}/{slug}/index.html'


# Feed generation is usually not desired when developing
FEED_ALL_ATOM = None
CATEGORY_FEED_ATOM = None
TRANSLATION_FEED_ATOM = None
AUTHOR_FEED_ATOM = None
AUTHOR_FEED_RSS = None

# Blogroll
LINKS = (('Pelican', 'http://getpelican.com/'),
         ('Python.org', 'http://python.org/'),
         ('Jinja2', 'http://jinja.pocoo.org/'),
         ('You can modify those links in your config file', '#'),)

# Social widget
SOCIAL = (('You can add links in your config file', '#'),
          ('Another social link', '#'),)

DEFAULT_PAGINATION = 10

# Uncomment following line if you want document-relative URLs when developing
#RELATIVE_URLS = True


# Theme and plugins

# The 'elegant' theme automatically includes the Table of Contents
# in the sidebar.  For other themes, you need to add
# {% if article.toc %}
#     <nav class="toc">
#     {{ article.toc }}
#     </nav>
# {% endif %}
# as mentioned here
#   https://github.com/getpelican/pelican-plugins/tree/master/extract_toc
THEME = 'pelican-elegant'

PLUGIN_PATH = 'pelican-plugins'
PLUGINS = ['extract_toc','render_math','disqus_static','better_figures_and_images',
			'summary',
			'liquid_tags.img', 'liquid_tags.video',
			'liquid_tags.youtube', 'liquid_tags.vimeo',
			'liquid_tags.include_code', 'liquid_tags.notebook',
			'liquid_tags.literal']

# Markdown plugins

from markdown.extensions.codehilite import CodeHiliteExtension
from markdown.extensions.toc import TocExtension
MD_EXTENSIONS = [
    CodeHiliteExtension(css_class='highlight'),
    TocExtension(permalink=True),
    'markdown.extensions.extra',
]

# For better typesetting
TYPOGRIFY = True

# Liquid Tags for Blogging with IPython Notebooks

# The theme file should be updated so that the base header contains the line:
#
#  {% if EXTRA_HEADER %}
#    {{ EXTRA_HEADER }}
#  {% endif %}
# 
# This header file is automatically generated by the notebook plugin
if not os.path.exists('_nb_header.html'):
    import warnings
    warnings.warn("_nb_header.html not found.  "
                  "Rerun make html to finalize build.")
else:
    EXTRA_HEADER = open('_nb_header.html').read().decode('utf-8')



DISQUS_SITENAME = 'dotvapostrophe'